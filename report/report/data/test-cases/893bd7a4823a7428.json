{
  "uid" : "893bd7a4823a7428",
  "name" : "test_search_checkwork",
  "fullName" : "test_checkwork_manager.Test_checkwork_management#test_search_checkwork",
  "historyId" : "fcac615f26d577acd92bae35cd40dda1",
  "time" : {
    "start" : 1595771760434,
    "stop" : 1595771771047,
    "duration" : 10613
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <testcase.test_checkwork_manager.Test_checkwork_management object at 0x00000000029703D0>\n\n    def test_search_checkwork(self):\n        # 进入考勤管理界面\n        CheckworkManagerPageObj.go_to_checkwork_manager_page()\n        # 这个统计打卡状态不知道要测试什么，后面有思路了再写。\n>       assert CheckworkManagerPageObj.statisticsCheckwork()[1] >= 0\n\ntest_checkwork_manager.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\checkwork_manager_page.py:124: in statisticsCheckwork\n    for status in self.acquireCheckWorkStatusList():\n..\\pages\\checkwork_manager_page.py:97: in acquireCheckWorkStatusList\n    for status in self.checkWorkListStatus():\n..\\pages\\checkwork_manager_page.py:52: in checkWorkListStatus\n    return self.find_elements(self.checkWorkListStatusLocator)\n..\\Lib\\findElement.py:33: in find_elements\n    WebDriverWait(driver=self.driver, timeout=TIMEOUT, poll_frequency=POLL_FREQUENCY).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8db2a62c5c27745c08f934ae6306cf0a\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x00000000029705E0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\ng:\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "setup",
    "time" : {
      "start" : 1595771759767,
      "stop" : 1595771760361,
      "duration" : 594
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "afterStages" : [ {
    "name" : "setup::fin",
    "time" : {
      "start" : 1595771783291,
      "stop" : 1595771783303,
      "duration" : 12
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "考勤管理模块"
  }, {
    "name" : "suite",
    "value" : "test_checkwork_manager"
  }, {
    "name" : "subSuite",
    "value" : "Test_checkwork_management"
  }, {
    "name" : "host",
    "value" : "Vampire-PC"
  }, {
    "name" : "thread",
    "value" : "7348-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_checkwork_manager"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "5560ec55d06c2270",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1595685351969,
        "stop" : 1595685362480,
        "duration" : 10511
      }
    }, {
      "uid" : "9a0efb79242bf918",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1595638459838,
        "stop" : 1595638473068,
        "duration" : 13230
      }
    }, {
      "uid" : "bd1fb0b623e90c2c",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1595512543510,
        "stop" : 1595512554165,
        "duration" : 10655
      }
    }, {
      "uid" : "80883fc93a9acedf",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1595426135323,
        "stop" : 1595426147208,
        "duration" : 11885
      }
    }, {
      "uid" : "367df25581c56306",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1595339793145,
        "stop" : 1595339803952,
        "duration" : 10807
      }
    }, {
      "uid" : "334452e244f4a3",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1595253341316,
        "stop" : 1595253352350,
        "duration" : 11034
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "893bd7a4823a7428.json",
  "parameterValues" : [ ]
}