{
  "uid" : "16c03aff639ae61f",
  "name" : "test_checkwork",
  "fullName" : "test_checkwork_manager.Test_checkwork_management#test_checkwork",
  "historyId" : "8ae7ff9eccb6632e6e153c87d40b1a0c",
  "time" : {
    "start" : 1595685363552,
    "stop" : 1595685368064,
    "duration" : 4512
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '21:56:06' in ['21:56:05', '21:55:57', '21:56:47', '20:51:37', '10:40:55']",
  "statusTrace" : "self = <testcase.test_checkwork_manager.Test_checkwork_management object at 0x0000000002ACB910>\n\n    def test_checkwork(self):\n        # 进入考勤管理界面\n        CheckworkManagerPageObj.go_to_checkwork_manager_page()\n        # 获取列表中的打卡日期\n        Cdate = CheckworkManagerPageObj.acquireCheckWorkList()\n        if Counter(Cdate)[f'{datetime.date.today()}'] == 2:\n            # 点击 饼图 进行打卡\n            CheckworkManagerPageObj.clickCheckWork()\n            try:\n                assert CheckworkManagerPageObj.acquireAlertDesc() == '你今天打卡次数超过了2次'\n            except:\n                CheckworkManagerPageObj.getScreenshot()\n                raise  #如果加try...except捕获异常后，此时所有的测试用例都是通过的，会影响测试结果。解决办法就是再把异常抛出来。\n        elif Counter(Cdate)[f'{datetime.date.today()}'] < 2:\n            # 点击 饼图 进行打卡\n            CheckworkManagerPageObj.clickCheckWork()\n            # 获取饼图上的时间\n            time = CheckworkManagerPageObj.acquireCheckWorkTime()\n            # 关闭弹出框\n            CheckworkManagerPageObj.closeAlertFrame()\n            # 点击 搜索按钮\n            CheckworkManagerPageObj.clickCheckWorkSearch()\n             # 获取打卡 列表中的时间\n            checkworkTime = CheckworkManagerPageObj.acquireCheckWorkTimeList()\n            # 判断打卡时间是否 包含在 时间列表中\n            try:\n>               assert time in checkworkTime\nE               AssertionError: assert '21:56:06' in ['21:56:05', '21:55:57', '21:56:47', '20:51:37', '10:40:55']\n\ntest_checkwork_manager.py:43: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "setup",
    "time" : {
      "start" : 1595685351350,
      "stop" : 1595685351865,
      "duration" : 515
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "setup::fin",
    "time" : {
      "start" : 1595685368079,
      "stop" : 1595685368089,
      "duration" : 10
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "考勤管理模块"
  }, {
    "name" : "suite",
    "value" : "test_checkwork_manager"
  }, {
    "name" : "subSuite",
    "value" : "Test_checkwork_management"
  }, {
    "name" : "host",
    "value" : "Vampire-PC"
  }, {
    "name" : "thread",
    "value" : "12284-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_checkwork_manager"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "16c03aff639ae61f.json",
  "parameterValues" : [ ]
}